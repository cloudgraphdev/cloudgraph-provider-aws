type awsKmsAliasListEntry
  @generate(
    query: { get: false, query: true, aggregate: false }
    mutation: { add: false, delete: false }
    subscription: false
  ) {
  id: String! @id
  aliasName: String @search(by: [hash, regexp])
  aliasArn: String @search(by: [hash, regexp])
  targetKeyId: String @search(by: [hash, regexp])
  creationDate: DateTime @search(by: [day])
  lastUpdatedDate: DateTime @search(by: [day])
}

type awsKms implements awsBaseService @key(fields: "id") {
  description: String @search(by: [hash, regexp, fulltext])
  keyRotationEnabled: Boolean @search
  usage: String @search(by: [hash, regexp])
  rawPolicy: String @search(by: [hash, regexp])
  policy: awsIamJSONPolicy
  enabled: Boolean @search
  keyState: String @search(by: [hash, regexp])
  customerMasterKeySpec: String @search(by: [hash, regexp])
  tags: [awsRawTag]
  creationDate: DateTime @search(by: [day])
  keyManager: String @search(by: [hash, regexp])
  origin: String @search(by: [hash, regexp])
  deletionDate: DateTime @search(by: [day])
  validTo: DateTime @search(by: [day])
  aliases: [awsKmsAliasListEntry]
  lambda: [awsLambda] @hasInverse(field: kms) #change to plural
  cloudtrail: [awsCloudtrail] @hasInverse(field: kms) #change to plural
  redshiftCluster: [awsRedshiftCluster] @hasInverse(field: kms) #change to plural
  sns: [awsSns] @hasInverse(field: kms)
  eksCluster: [awsEksCluster] @hasInverse(field: kms) #change to plural
  elastiCacheReplicationGroup: [awsElastiCacheReplicationGroup]
    @hasInverse(field: kms) #change to plural
  efs: [awsEfs] @hasInverse(field: kms)
  emrCluster: [awsEmrCluster] @hasInverse(field: kms) #change to plural
  cloudwatchLog: [awsCloudwatchLog] @hasInverse(field: kms)
  codebuilds: [awsCodebuild] @hasInverse(field: kms)
  elasticSearchDomains: [awsElasticSearchDomain] @hasInverse(field: kms)
  dmsReplicationInstances: [awsDmsReplicationInstance] @hasInverse(field: kms)
  sageMakerNotebookInstances: [awsSageMakerNotebookInstance]
    @hasInverse(field: kms)
  rdsClusterSnapshots: [awsRdsClusterSnapshot] @hasInverse(field: kms)
  secretsManager: [awsSecretsManager] @hasInverse(field: kms)
  ecsCluster: [awsEcsCluster] @hasInverse(field: kms)
  dynamodb: [awsDynamoDbTable] @hasInverse(field: kms)
  cognitoUserPools: [awsCognitoUserPool] @hasInverse(field: kms)
  rdsCluster: [awsRdsCluster] @hasInverse(field: kms)
  rdsDbInstance: [awsRdsDbInstance] @hasInverse(field: kms)
  managedAirflows: [awsManagedAirflow] @hasInverse(field: kms)
  s3: [awsS3] @hasInverse(field: kms)
  ebsSnapshots: [awsEbsSnapshot] @hasInverse(field: kms)
}
