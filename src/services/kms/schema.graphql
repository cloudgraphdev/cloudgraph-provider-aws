type awsKms @key(fields: "id"){
  id: String! @id @search(by: [hash])
  accountId: String! @search(by: [hash])
  arn: String! @id @search(by: [hash, regexp])
  region: String @search(by: [hash, regexp])
  description: String @search(by: [hash, regexp, fulltext])
  keyRotationEnabled: Boolean @search
  usage: String @search(by: [hash, regexp])
  policy: awsIamJSONPolicy
  enabled: Boolean @search
  keyState: String @search(by: [hash, regexp])
  customerMasterKeySpec: String @search(by: [hash, regexp])
  tags: [awsRawTag]
  creationDate: String @search(by: [hash, regexp])
  keyManager: String @search(by: [hash, regexp])
  origin: String @search(by: [hash, regexp])
  deletionDate: String @search(by: [hash, regexp])
  validTo: String @search(by: [hash, regexp])
  lambda: [awsLambda] @hasInverse(field: kms) #change to plural
  cloudtrail: [awsCloudtrail] @hasInverse(field: kms) #change to plural
  redshiftCluster: [awsRedshiftCluster] @hasInverse(field: kms) #change to plural
  sns: [awsSns] @hasInverse(field: kms)
  eksCluster: [awsEksCluster] @hasInverse(field: kms) #change to plural
  elastiCacheReplicationGroup: [awsElastiCacheReplicationGroup] @hasInverse(field: kms) #change to plural
  efs: [awsEfs] @hasInverse(field: kms)
  emrCluster: [awsEmrCluster] @hasInverse(field: kms) #change to plural
  cloudwatchLog: [awsCloudwatchLog] @hasInverse(field: kms)
  codebuilds: [awsCodebuild] @hasInverse(field: kms)
  elasticSearchDomains: [awsElasticSearchDomain] @hasInverse(field: kms)
  dmsReplicationInstances: [awsDmsReplicationInstance] @hasInverse(field: kms)
  sageMakerNotebookInstances: [awsSageMakerNotebookInstance] @hasInverse(field: kms)
  rdsClusterSnapshots: [awsRdsClusterSnapshot] @hasInverse(field: kms)
  cognitoUserPool: [awsCognitoUserPool] @hasInverse(field: kms)
}
