type awsTransitGatewayAttachment @key(fields: "arn") {
  id: String! @search(by: [hash])
  accountId: String! @search(by: [hash])
  arn: String! @id @search(by: [hash, regexp])
  region: String @search(by: [hash, regexp])
  transitGatewayId: String @search(by: [hash])
  transitGatewayOwnerId: String @search(by: [hash])
  resourceOwnerId: String @search(by: [hash])
  resourceType: String @search(by: [hash, regexp])
  resourceId: String @search(by: [hash])
  state: String @search(by: [hash, regexp])
  transitGatewayRouteTableId: String @search(by: [hash])
  creationTime: String @search(by: [hash, regexp])
  tags: [awsRawTag]
  transitGateway: [awsTransitGateway]
    @hasInverse(field: transitGatewayAttachments)
  routeTable: [awsTransitGatewayRouteTable] @hasInverse(field: transitGatewayAttachments)
  vpc: [awsVpc] @hasInverse(field: transitGatewayAttachments)
  vpnConnection: [awsVpnConnection] @hasInverse(field: transitGatewayAttachments)
  # TODO: Add vpcPeeringConnection when the service is available
}
