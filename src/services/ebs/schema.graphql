type awsEbs implements awsBaseService @key(fields: "arn") {
  attachments: [awsEbsAttachment]
  iops: Int @search
  size: String @search(by: [hash, regexp])
  state: String @search(by: [hash, regexp])
  created: String @search(by: [hash, regexp])
  snapshot: String @search(by: [hash, regexp])
  encrypted: Boolean @search
  isBootDisk: Boolean @search
  volumeType: String @search(by: [hash, regexp])
  availabilityZone: String @search(by: [hash, regexp])
  multiAttachEnabled: Boolean @search
  permissions: [awsEbsPermission]
  tags: [awsRawTag]
  ec2Instance: [awsEc2] @hasInverse(field: ebs)
  asg: [awsAsg] @hasInverse(field: ebs)
  emrInstance: [awsEmrInstance] @hasInverse(field: ebs)
  ebsSnapshots: [awsEbsSnapshot] @hasInverse(field: ebs)
}

type awsEbsAttachment
  @generate(
    query: { get: false, query: true, aggregate: false }
    mutation: { add: false, delete: false }
    subscription: false
  ) {
  id: String! @id
  attachmentInformation: String
  attachedTime: String
  deleteOnTermination: Boolean
}

type awsEbsPermission
  @generate(
    query: { get: false, query: true, aggregate: false }
    mutation: { add: false, delete: false }
    subscription: false
  ) {
  id: String! @id
  group: String @search(by: [hash, regexp])
  userId: String @search(by: [hash, regexp])
}
